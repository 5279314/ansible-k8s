---
- name: 创建工作和插件目录
  file:
    dest: "{{ item }}"
    state: directory
  loop:
    - "{{ k8s_work_dir }}/bin"
    - "{{ k8s_work_dir }}/cfg"
    - "{{ k8s_work_dir }}/ssl"
    - "{{ k8s_work_dir }}/logs"
    - /opt/flannel/ssl/
    - /run/flannel/
    - "{{ tmp_dir }}"

- name: 分发并解压k8s二进制包（需要花费一些时间...）
  unarchive:
    src: "{{ item }}"
    dest: "{{ tmp_dir }}"
    creates: "{{ tmp_dir }}/kubernetes/server/"
  with_fileglob:
    - "{{ software_dir }}/kubernetes-*.tar.gz"

- name: 分发并解压flannel 服务二进制包
  unarchive:
    src: "{{ item }}"
    dest: /opt/flannel/
    creates: /opt/flannel/flanneld
  with_fileglob:
    - "{{ software_dir }}/flannel-*.tar.gz"

- name: 分发并解压 flannel 插件二进制包
  unarchive:
    src: "{{ item }}"
    dest: /opt/
    creates: /opt/cni-plugin-flannel*
  with_fileglob:
    - "{{ software_dir }}/cni-plugin-flannel-*.tar.gz"

- name: 移动flannel和k8s二进制文件
  shell: |
    mv /opt/cni-plugin-flannel*/flannel-amd64 /opt/cni/bin/flannel
    cp -rf {{ tmp_dir }}/kubernetes/server/bin/kubelet {{ k8s_work_dir }}/bin
    cp -rf {{ tmp_dir }}/kubernetes/server/bin/kube-proxy {{ k8s_work_dir }}/bin


- name: 设置flannel可执行权限
  file:
    path: /opt/cni/bin/flannel
    mode: '0755'

- name: 复制cni flannel 配置文件
  copy:
    src: flannel.conflist
    dest: /etc/cni/net.d/10-containerd-net.conflist
    backup: yes

- name: 复制和分发证书与配置文件
  block:
    - name: 分发k8s证书
      copy:
        src: "k8s_cert/{{ item }}"
        dest: "{{ k8s_work_dir }}/ssl"
      loop:
        - ca.pem
        - kube-proxy.pem
        - kube-proxy-key.pem

    - name: 分发flannel证书
      copy:
        src: "etcd_cert/{{ item }}"
        dest: "/opt/flannel/ssl/"
      loop:
        - ca.pem
        - server.pem
        - server-key.pem

    - name: 分发flannel和k8s配置文件
      template:
        src: "{{ item }}"
        dest: "{% if item.startswith('subnet') %}/run/flannel/{{ item.split('.')[:-1]|join('.') }}{% else %}{{ k8s_work_dir }}/cfg/{{ item.split('.')[:-1]|join('.') }}{% endif %}"
      loop:
        - subnet.env.j2
        - bootstrap.kubeconfig.j2
        - kubelet.conf.j2
        - kubelet-config.yml.j2
        - kube-proxy.kubeconfig.j2
        - kube-proxy.conf.j2
        - kube-proxy-config.yml.j2

    - name: 分发service文件
      template:
        src: "{{ item }}"
        dest: "/usr/lib/systemd/system/{{ item.split('.')[:-1]|join('.') }}"
      loop:
        - kubelet.service.j2
        - kube-proxy.service.j2
        - flanneld.service.j2

- name: 优化flannel网络
  shell: |
    iptables -t nat -I POSTROUTING -s {{ node_pod_ip }} ! -d {{ pod_cidr }} -j MASQUERADE
    iptables -t nat -I POSTROUTING ! -s {{ pod_cidr }} -d {{ node_pod_ip }} -j RETURN
    iptables -t nat -I POSTROUTING -s {{ node_pod_ip }} -d {{ pod_cidr }} -j RETURN
    {% if ansible_facts['distribution'] == 'CentOS' %}
      iptables-save > /etc/sysconfig/iptables
    {% elif ansible_facts['distribution'] == 'Ubuntu' %}
      netfilter-persistent save
    {% endif %}

- name: 启动k8s node组件
  systemd:
    name: "{{ item }}"
    state: restarted
    enabled: yes
    daemon_reload: yes
  loop:
    - kubelet
    - kube-proxy
    - flanneld
    - containerd
    - iptables
